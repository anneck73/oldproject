# To get started with security, check out the documentation:
# http://symfony.com/doc/current/book/security.html
security:
    encoders:
        FOS\UserBundle\Model\UserInterface:
            algorithm: bcrypt
            cost: 12
        # Remote Clients
        WebSocket:
            algorithm:            pbkdf2
            hash_algorithm:       sha256
            encode_as_base64:     true
            iterations:           1000
            key_length:           32


    role_hierarchy:
        ROLE_ADMIN:       [ROLE_USER, ROLE_HOME_USER, ROLE_RESTAURANT_USER]
        # Not used yet ;)
        ROLE_SUPER_ADMIN: ROLE_ADMIN
        # Used in workflow to "guard" transitions only executed by system commands like "finish"
        ROLE_SYSTEM: ROLE_ADMIN

    providers:
        # Chain provider is not used yet!
        chain_provider:
            chain:
                providers: [in_memory, fos_userbundle]
        # Providing a system user ...
        in_memory:
            memory:
                users:
                    mealmatch-system-user:
                        password: "%secret%"
                        roles: 'ROLE_SYSTEM'
        fos_userbundle:
            id: fos_user.user_provider.username_email

    firewalls:
        main:
            http_basic: ~
            # Enables user impersonate for admins
            switch_user: { role: ROLE_ADMIN, parameter: _to_user }
            pattern: ^/
            form_login:
                provider: fos_userbundle
                csrf_token_generator: security.csrf.token_manager
                # if you are using Symfony < 2.8, use the following config instead:
                # csrf_provider: form.csrf_provider
                always_use_default_target_path: false
                # default_target_path:            /dashboard
                use_referer: true
                login_path: fos_user_security_login
                check_path: fos_user_security_check

            logout_on_user_change: true

            logout:
                path: fos_user_security_logout
                target: home

            anonymous:    true

            oauth:
                resource_owners:
                    facebook:     "/login/check-facebook"
                    paypal:       "/login/check-paypal"
                    twitter:      "/login/check-twitter"
                    google:       "/login/check-google"
                login_path:        /login
                use_forward:       false
                failure_path:      /login
                oauth_user_provider:
                    service: mm_user_provider

        login:
            pattern:  ^/login$
            security: false

            remember_me:
                secret: "%secret%"
                lifetime: 31536000 # 365 days in seconds
                path: /
                domain: ~ # Defaults to the current domain from $_SERVER

    access_control:
        - { path: "^/p/", role: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: "%mm_security_channel%" }
        - { path: "^/login[/]*$", role: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: "%mm_security_channel%" }
        - { path: "^/register", role: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: "%mm_security_channel%" }
        - { path: "^/resetting", role: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: "%mm_security_channel%" }
        - { path: "^/admin/", role: ROLE_ADMIN, requires_channel: "%mm_security_channel%" }
        - { path: "^/u/", role: ROLE_USER, ip: 127.0.0.1, requires_channel: "%mm_security_channel%" }
        - { path: "^/api/", role: ROLE_USER, ip: 127.0.0.1, requires_channel: "%mm_security_channel%" }
        - { path: "^/[^/]+/p$", role: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: "%mm_security_channel%" }
        - { path: "^/[^/]+/login$", role: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: "%mm_security_channel%" }
        - { path: "^/[^/]+/register", role: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: "%mm_security_channel%" }
        - { path: "^/[^/]+/resetting", role: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: "%mm_security_channel%" }
        - { path: "^/[^/]+/admin", role: ROLE_ADMIN, requires_channel: "%mm_security_channel%" }
        - { path: "^/[^/]+/", role: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: "%mm_security_channel%" }