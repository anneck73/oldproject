<?php

/*
 * Copyright (c) 2016-2018. Mealmatch GmbH
 * (c) AndrÃ© Anneck <andre.anneck@mealmatch.de>
 * Mealmatch WebApp v0.2
 */

namespace Mealmatch\ApiBundle\Repository\Meal;

use Doctrine\ORM\EntityRepository;
use Mealmatch\ApiBundle\ApiConstants;
use MMUserBundle\Entity\MMUser;

/**
 * BaseMealTicketRepository.
 *
 * This class was generated by the PhpStorm "Php Annotations" Plugin. Add your own custom
 * repository methods below.
 */
class BaseMealTicketRepository extends EntityRepository
{
    /**
     * @todo: Finish PHPDoc!
     * A summary informing the user what the associated element does.
     *
     * A *description*, that can span multiple lines, to go _in-depth_ into the details of this element
     * and to provide some background information or textual references.
     *
     * @param string $myArgument with a *description* of this argument, these may also
     *                           span multiple lines
     *
     * @return array
     */
    public function getLastPayedByHost(MMUser $host): array
    {
        return $this->createQueryBuilder('bmt')
            ->addSelect('bmt')
            ->from('ApiBundle:Meal\BaseMealTicket', 'ticket')
            ->where('bmt.status = :status')
            ->andWhere('bmt.host = :host')
            ->setParameter('status', ApiConstants::MEAL_TICKET_STATUS_PAYED)
            ->setParameter('host', $host)
            ->orderBy('bmt.updatedAt')->getQuery()->getResult();
    }

    /**
     * @todo: Finish PHPDoc!
     * A summary informing the user what the associated element does.
     *
     * A *description*, that can span multiple lines, to go _in-depth_ into the details of this element
     * and to provide some background information or textual references.
     *
     * @param MMUser $host
     * @param string $myArgument with a *description* of this argument, these may also
     *                           span multiple lines
     *
     * @return array
     */
    public function getNextToServeByHost(MMUser $host): array
    {
        return $this->createQueryBuilder('bmt')
            ->addSelect('bmt')
            ->from('ApiBundle:Meal\BaseMealTicket', 'ticket')
            ->leftJoin('ticket.baseMeal', 'baseMeal')
            ->leftJoin('baseMeal.mealEvents', 'mealEvents')
            ->where('bmt.status = :status')
            ->andWhere('bmt.host = :host')
            ->setParameter('status', ApiConstants::MEAL_TICKET_STATUS_PAYED)
            ->setParameter('host', $host)
            ->orderBy('mealEvents.startDateTime')->getQuery()->getResult();
    }
}
